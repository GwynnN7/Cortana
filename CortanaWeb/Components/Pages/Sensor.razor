@page "/sensors"
@using CortanaLib
@using CortanaLib.Structures
@rendermode InteractiveServer

<PageTitle>Sensors List</PageTitle>
<main>
    <div class="table-container">
        <table class="raspberry-table">
            <thead>
            <tr>
                <th>Sensor</th>
                <th>Data</th>
            </tr>
            </thead>
            <tbody>
            <tr>
                <td>Room Temperature</td>
                <td>@_data?.Temperature</td>
            </tr>
            <tr>
                <td>Light Level</td>
                <td>@_data?.Light</td>
            </tr>
            <tr>
                <td>Movement</td>
                <td>@_data?.Motion</td>
            </tr>
            </tbody>
        </table>
    </div>
</main>


@code {
    private SensorData? _data;
    private System.Threading.Timer? _timer;

    protected override async Task OnInitializedAsync()
    {
        _timer = new System.Threading.Timer(_ =>
        {
            InvokeAsync( async ()  =>
            {
                MessageResponse newTemp = await ApiHandler.Get($"{ERoute.Sensors}/{ESensor.Temperature}");
                MessageResponse newLight = await ApiHandler.Get($"{ERoute.Sensors}/{ESensor.Light}");
                MessageResponse newMotion = await ApiHandler.Get($"{ERoute.Sensors}/{ESensor.Motion}");
                
                _data = new SensorData
                {
                    Temperature = newTemp.Message,
                    Light = newLight.Message,
                    Motion = newMotion.Message
                };

                StateHasChanged();
            });
        }, null, 0, 2000);

        await base.OnInitializedAsync();
    }

    private class SensorData
    {
        public string Temperature { get; init; } = "Loading...";
        public string Light { get; init; } = "Loading...";
        public string Motion { get; init; } = "Loading...";
    }
}