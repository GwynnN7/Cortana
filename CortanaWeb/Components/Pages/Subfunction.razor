@page "/subfunction"
@using CortanaLib
@using CortanaLib.Structures
@rendermode InteractiveServer
@inject IJSRuntime JsRuntime;

<PageTitle>Subfunctions</PageTitle>

<body>
    <h1>Subfunctions</h1>

    <main>
        <hr class="solid">
        <section id="subfunctions">
            <h2>Device Controller</h2>
            <div class="subfunctions-grid">
                <div class="subfunctions-card">
                    <h3>CortanaKernel</h3>
                    <div>
                        <button class="subfunctions-button" @onclick="() => HandleSubfunction(ESubFunctionType.CortanaKernel, ESubfunctionAction.Restart)">Restart</button>
                        <button class="subfunctions-button" @onclick="() => HandleSubfunction(ESubFunctionType.CortanaKernel, ESubfunctionAction.Reboot)">Reboot</button>
                    </div>
                    <div>
                        <button class="subfunctions-button" @onclick="() => HandleSubfunction(ESubFunctionType.CortanaKernel, ESubfunctionAction.Update)">Update</button>
                        <button class="subfunctions-button" @onclick="() => HandleSubfunction(ESubFunctionType.CortanaKernel, ESubfunctionAction.Stop)">Stop</button>
                    </div>
                </div>
                <div class="subfunctions-card">
                    <h3>CortanaDiscord</h3>
                    <div>
                        <button class="subfunctions-button" @onclick="() => HandleSubfunction(ESubFunctionType.CortanaDiscord, ESubfunctionAction.Restart)">Restart</button>
                        <button class="subfunctions-button" @onclick="() => HandleSubfunction(ESubFunctionType.CortanaDiscord, ESubfunctionAction.Reboot)">Reboot</button>
                    </div>
                    <div>
                        <button class="subfunctions-button" @onclick="() => HandleSubfunction(ESubFunctionType.CortanaDiscord, ESubfunctionAction.Update)">Update</button>
                        <button class="subfunctions-button" @onclick="() => HandleSubfunction(ESubFunctionType.CortanaDiscord, ESubfunctionAction.Stop)">Stop</button>
                    </div>
                </div>
                <div class="subfunctions-card">
                    <h3>CortanaTelegram</h3>
                    <div>
                        <button class="subfunctions-button" @onclick="() => HandleSubfunction(ESubFunctionType.CortanaTelegram, ESubfunctionAction.Restart)">Restart</button>
                        <button class="subfunctions-button" @onclick="() => HandleSubfunction(ESubFunctionType.CortanaTelegram, ESubfunctionAction.Reboot)">Reboot</button>
                    </div>
                    <div>
                        <button class="subfunctions-button" @onclick="() => HandleSubfunction(ESubFunctionType.CortanaTelegram, ESubfunctionAction.Update)">Update</button>
                        <button class="subfunctions-button" @onclick="() => HandleSubfunction(ESubFunctionType.CortanaTelegram, ESubfunctionAction.Stop)">Stop</button>
                    </div>
                </div>
                <div class="subfunctions-card">
                    <h3>CortanaWeb</h3>
                    <div>
                        <button class="subfunctions-button" @onclick="() => HandleSubfunction(ESubFunctionType.CortanaWeb, ESubfunctionAction.Restart)">Restart</button>
                        <button class="subfunctions-button" @onclick="() => HandleSubfunction(ESubFunctionType.CortanaWeb, ESubfunctionAction.Reboot)">Reboot</button>
                    </div>
                    <div>
                        <button class="subfunctions-button" @onclick="() => HandleSubfunction(ESubFunctionType.CortanaWeb, ESubfunctionAction.Update)">Update</button>
                        <button class="subfunctions-button" @onclick="() => HandleSubfunction(ESubFunctionType.CortanaWeb, ESubfunctionAction.Stop)">Stop</button>
                    </div>
                </div>
            </div>
        </section>
    </main>
</body>
@code {
    private async Task HandleSubfunction(ESubFunctionType type, ESubfunctionAction action)
    {
        ResponseMessage result = await ApiHandler.Post($"{ERoute.SubFunction}/{type}", new PostAction(action.ToString()));
        await JsRuntime.InvokeVoidAsync("alert", result.Response);
    }
}